#ifndef LIBPHONENUMBER_SYS_C_SHORTNUMBERINFO_H
#define LIBPHONENUMBER_SYS_C_SHORTNUMBERINFO_H

#include "libphonenumber_sys_c_global.h"

extern "C" {

LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_ConnectsToEmergencyNumber(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* number, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_code);
LIBPHONENUMBER_SYS_C_EXPORT std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_GetExampleShortNumberForCost_as_ptr(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_code, i18n::phonenumbers::ShortNumberInfo::ShortNumberCost cost);
LIBPHONENUMBER_SYS_C_EXPORT void libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_GetExampleShortNumberForCost_to_output(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_code, i18n::phonenumbers::ShortNumberInfo::ShortNumberCost cost, std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* output);
LIBPHONENUMBER_SYS_C_EXPORT std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_GetExampleShortNumber_as_ptr(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_code);
LIBPHONENUMBER_SYS_C_EXPORT void libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_GetExampleShortNumber_to_output(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_code, std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* output);
LIBPHONENUMBER_SYS_C_EXPORT i18n::phonenumbers::ShortNumberInfo::ShortNumberCost libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_GetExpectedCost(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const i18n::phonenumbers::PhoneNumber* number);
LIBPHONENUMBER_SYS_C_EXPORT i18n::phonenumbers::ShortNumberInfo::ShortNumberCost libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_GetExpectedCostForRegion_i18n_phonenumbers_PhoneNumber_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const i18n::phonenumbers::PhoneNumber* short_number, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_dialing_from);
LIBPHONENUMBER_SYS_C_EXPORT i18n::phonenumbers::ShortNumberInfo::ShortNumberCost libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_GetExpectedCostForRegion_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* short_number, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_dialing_from);
LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_IsCarrierSpecific(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const i18n::phonenumbers::PhoneNumber* number);
LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_IsEmergencyNumber(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* number, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_code);
LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_IsPossibleShortNumber(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const i18n::phonenumbers::PhoneNumber* number);
LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_IsPossibleShortNumberForRegion_i18n_phonenumbers_PhoneNumber_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const i18n::phonenumbers::PhoneNumber* short_number, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_dialing_from);
LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_IsPossibleShortNumberForRegion_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* short_number, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_dialing_from);
LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_IsValidShortNumber(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const i18n::phonenumbers::PhoneNumber* number);
LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_IsValidShortNumberForRegion_i18n_phonenumbers_PhoneNumber_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const i18n::phonenumbers::PhoneNumber* short_number, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_dialing_from);
LIBPHONENUMBER_SYS_C_EXPORT bool libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_IsValidShortNumberForRegion_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char_std___cxx11_basic_string_char_std_char_traits_char_std_allocator_char(const i18n::phonenumbers::ShortNumberInfo* this_ptr, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* short_number, const std::__cxx11::basic_string< char, std::char_traits< char >, std::allocator< char > >* region_dialing_from);
LIBPHONENUMBER_SYS_C_EXPORT void libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_constructor(i18n::phonenumbers::ShortNumberInfo* output);
LIBPHONENUMBER_SYS_C_EXPORT void libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_delete(i18n::phonenumbers::ShortNumberInfo* this_ptr);
LIBPHONENUMBER_SYS_C_EXPORT void libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_destructor(i18n::phonenumbers::ShortNumberInfo* this_ptr);
LIBPHONENUMBER_SYS_C_EXPORT i18n::phonenumbers::ShortNumberInfo* libphonenumber_sys_c_i18n_phonenumbers_ShortNumberInfo_new();

} // extern "C"

#endif // LIBPHONENUMBER_SYS_C_SHORTNUMBERINFO_H
